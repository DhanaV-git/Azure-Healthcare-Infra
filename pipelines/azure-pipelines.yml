trigger:
  branches:
    include:
      - main

variables:
  terraformVersion: '1.5.0'
  databricksHost: $(DATABRICKS_HOST)
  databricksToken: $(DATABRICKS_TOKEN)

stages:
- stage: Terraform
  displayName: "Deploy Infrastructure"
  jobs:
    - job: TerraformPlanApply
      displayName: "Terraform Plan & Apply"
      pool:
        vmImage: ubuntu-latest
      steps:
        - checkout: self

        - task: TerraformInstaller@1
          displayName: "Install Terraform"
          inputs:
            terraformVersion: $(terraformVersion)

        - script: terraform init
          workingDirectory: infrastructure
          displayName: "Terraform Init"

        - script: terraform plan -out=tfplan
          workingDirectory: infrastructure
          displayName: "Terraform Plan"

        - script: terraform apply -auto-approve tfplan
          workingDirectory: infrastructure
          displayName: "Terraform Apply"

- stage: UploadNotebooks
  displayName: "Upload Databricks Notebooks"
  dependsOn: Terraform
  condition: succeeded()
  jobs:
    - job: Upload
      displayName: "Databricks CLI Upload"
      pool:
        vmImage: ubuntu-latest
      steps:
        - checkout: self

        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.x'

        - script: |
            pip install databricks-cli
            databricks configure --token <<< "${DATABRICKS_HOST}\n${DATABRICKS_TOKEN}"
            bash scripts/upload-notebooks.sh
          displayName: "Upload Notebooks to Databricks"
          env:
            DATABRICKS_HOST: $(databricksHost)
            DATABRICKS_TOKEN: $(databricksToken)
